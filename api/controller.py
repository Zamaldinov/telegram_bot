from yandex_music import Client
import os
from typing import List, Dict
from yandex_music.track_short import TrackShort


class Controller:
    def __init__(self):
        token = os.environ.get('TOKEN')
        self.client = Client(token).init()

    @staticmethod
    def track_short_to_string(track_short_list: List[TrackShort], header: str) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ç—Ä–µ–∫–æ–≤"""
        result = [header]
        for track_short in track_short_list:
            track, chart = track_short.track, track_short.chart
            artists = ''
            if track.artists:
                artists = ' - ' + ', '.join(artist.name for artist in track.artists)

            track_text = f'{track.title}{artists}'
            track_text = f'{chart.position} {track_text}'
            result.append(track_text)
        return '\n'.join(result)

    def get_last_ten_chart_tracks(self, chart_id: str) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Ç—Ä–µ–∫–æ–≤ –∏–∑ —á–∞—Ä—Ç–∞"""
        chart = self.client.chart(chart_id).chart
        result = chart.tracks[-10:]
        return self.track_short_to_string(result, '–ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Ç—Ä–µ–∫–æ–≤ —á–∞—Ä—Ç–∞:')

    def get_first_ten_chart_tracks(self, chart_id: str) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–µ—Ä–≤—ã–µ 10 —Ç—Ä–µ–∫–æ–≤ –∏–∑ —á–∞—Ä—Ç–∞"""
        chart = self.client.chart(chart_id).chart
        result = chart.tracks[:11]
        return self.track_short_to_string(result, '–ü–µ—Ä–≤—ã–µ 10 —Ç—Ä–µ–∫–æ–≤ —á–∞—Ä—Ç–∞:')

    def get_genre_dictionary_from_chart(self, chart_id: str) -> Dict[str, List[TrackShort]]:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å –∂–∞–Ω—Ä–æ–≤ –∏ —Ç—Ä–µ–∫–æ–≤"""
        genre_dict = {}
        chart = self.client.chart(chart_id).chart
        for track_short in chart.tracks:
            genre = track_short.track.albums[0]['genre']
            if genre not in genre_dict:
                genre_dict[genre] = [track_short]
            else:
                genre_dict[genre].append(track_short)
        return genre_dict

    def get_all_chart(self, chart_id: str) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —á–∞—Ä—Ç —Ç—Ä–µ–∫–æ–≤ –∫—Ä–∞—Å–∏–≤—ã–º —Å–ø–∏—Å–∫–æ–º"""
        chart = self.client.chart(chart_id).chart
        text = [f'üèÜ {chart.title}', chart.description, '', '–¢—Ä–µ–∫–∏:']
        for track_short in chart.tracks:
            track, chart = track_short.track, track_short.chart
            artists = ''
            if track.artists:
                artists = ' - ' + ', '.join(artist.name for artist in track.artists)

            track_text = f'{track.title}{artists}'

            if chart.progress == 'down':
                track_text = 'üîª ' + track_text
            elif chart.progress == 'up':
                track_text = 'üî∫ ' + track_text
            elif chart.progress == 'new':
                track_text = 'üÜï ' + track_text
            elif chart.position == 1:
                track_text = 'üëë ' + track_text

            track_text = f'{chart.position} {track_text}'
            text.append(track_text)

        return '\n'.join(text)

    def commands_list(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –¥–ª—è –±–æ—Ç–∞"""
        commands = ['/chart - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —á–∞—Ä—Ç –ø–µ—Å–µ–Ω –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Ä–µ–≥–∏–æ–Ω–µ.',
                    '/low - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Ç—Ä–µ–∫–æ–≤.',
                    '/high - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–µ—Ä–≤—ã–µ 10 —Ç—Ä–µ–∫–æ–≤.',
                    '/custom - –ø–æ–∫–∞–∑–∞—Ç—å —Ç—Ä–µ–∫–∏ —á–∞—Ä—Ç–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∂–∞–Ω—Ä–∞.',
                    '/change - —Å–º–µ–Ω–∞ —Ä–µ–≥–∏–æ–Ω–∞.',
                    '/history –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –∑–∞–ø—Ä–æ—à–µ–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ (10 –∑–∞–ø—Ä–æ—Å–æ–≤).']
        result = ''
        for i_list in commands:
            result += i_list + '\n'
        return result


